name: CTF Deployer Tests

on:
  push:
    branches: [ main, master, develop, test ]
  pull_request:
    branches: [ main, master, develop, test ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # PostgreSQL service container for integration tests
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secure_password
          POSTGRES_DB: ctf_deployer
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
      with:
        install: true
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov python-dotenv
        # Install Flask app requirements
        if [ -f flask_app/requirements.txt ]; then 
          pip install -r flask_app/requirements.txt
        fi
    
    - name: Configure environment for CI
      run: |
        # Modify .env to use localhost instead of postgres for DB_HOST
        sed -i 's/DB_HOST=postgres/DB_HOST=localhost/g' .env
        echo "Environment configured for CI - using localhost for database"
        echo "DB_HOST set to: $(grep DB_HOST .env | cut -d '=' -f2)"
    
    - name: Run database module tests
      run: |
        echo "Running database tests..."
        python -m pytest tests/test_database_minimal.py -v
    
    - name: Create directories
      run: |
        # Create any needed directories that the application expects
        mkdir -p data
        echo "Created required directories"
    
    - name: Verify database connection
      run: |
        # Optional: Test database connection
        python -c "
        import psycopg2
        try:
            conn = psycopg2.connect(
                dbname='ctf_deployer',
                user='postgres', 
                password='secure_password',
                host='localhost',
                port=5432
            )
            print('Database connection successful!')
            conn.close()
        except Exception as e:
            print(f'Database connection failed: {e}')
            exit(1)
        "
    
    - name: Run additional passing tests
      run: |
        # Add more tests here as you fix them
        echo "Running additional tests that are known to pass..."
        # Example: python -m pytest tests/some_other_test.py -v
    
    - name: Generate coverage report
      run: |
        # Generate coverage report for your tests
        python -m pytest tests/test_database_minimal.py --cov=flask_app.database
    
    - name: Create GitHub Actions artifacts
      if: always()  # Run even if previous steps failed
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          .pytest_cache/
          .coverage
        retention-days: 5
    
    - name: Environment diagnostic information
      if: always()  # Run even if previous steps failed
      run: |
        echo "==== Environment Information ===="
        echo "Python: $(python --version)"
        echo "Database: localhost:5432/ctf_deployer"
        echo "Docker: $(docker --version)"
        echo "Working directory: $(pwd)"
        echo "===== Environment Variables ====="
        env | grep -E 'DB_|POSTGRES|PG_|GITHUB_' | sort
